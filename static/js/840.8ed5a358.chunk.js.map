{"version":3,"file":"static/js/840.8ed5a358.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","push","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}